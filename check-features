#! /usr/bin/env python2.6

## python imports
import os
import random
import pandas as pd
import numpy as np
import matplotlib as mpl
import matplotlib.pyplot as plt
import pandas.core.common as com
from pandas.core.index import Index
from pandas.tools import plotting
from pandas.tools.plotting import scatter_matrix

## local imports
from ditaumassskl.features import *
from ditaumassskl.log import *
from ditaumassskl.categories.mva import *

## it must be in TTreeFormula format, a TCut object 
selection = Category_Preselection.common_cuts
# selection= "ditau_tau0_matched_isHadTau==1"#] && df[ditau_tau1_matched_isHadTau==1]"

# ## read hdf5 files to DataFrames
# train_dfs= []
# for fname in os.listdir("hdf5s/TrainingBRT/"):
#     train_df = pd.read_hdf("hdf5s/TrainingBRT/"+fname)
#     logger.info("Adding sample of size {0}".format(train_df.shape))
#     train_dfs.append(train_df)

# ## concatenate DataFrames
# data = pd.concat(train_dfs, ignore_index=True)

# ## scatter plots, pick 5000 data points randomly
# cm = plt.cm.get_cmap('RdYlBu')
# df1=data.ix[random.sample(data.index, 1000)]
# fig = plt.figure()

# ## mutual correlation between input variables
# # for var1 in features:
# #     for var2 in ["parent_m"]:
# #         if var1!=var2:
# #             df1.plot(kind="scatter", x = var1, y = var2)
# #             fig=plt.gcf()
# #             fig.savefig("./OutPlots/LinearCorrelation_%s_vs_%s.eps"%(var1,var2))
# #             fig.clear()
