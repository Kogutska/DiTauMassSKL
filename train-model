#! /usr/bin/env python2.6

## python imports
import os
import random
import pandas as pd
import numpy as np
import matplotlib as mpl
import matplotlib.pyplot as plt
import pandas.core.common as com
from pandas.core.index import Index
from pandas.tools import plotting
from pandas.tools.plotting import scatter_matrix


## sklearn imports
from sklearn import datasets
from sklearn.metrics import classification_report, roc_auc_score
from sklearn.tree import DecisionTreeRegressor
from sklearn.ensemble import AdaBoostRegressor

## local imports
from logs import *
from ditaumassskl import features

## two alternative ways to read the h5 file and create the training sample
#store = pd.HDFStore("./ntuples/HDF5/reco_gg_100_train.h5")

train_df = pd.read_hdf("./ntuples/HDF5/reco_gg_60_train.h5")
for fname in os.listdir("ntuples/HDF5/"):
    if not "gg_60" in fname:
        train_df = pd.read_hdf("./ntuples/HDF5/"+fname)
        logger.info("Adding sample of size {0}".format(train_df.shape))        
        train_df.append(train_df)
        
target_df = train_df['ditau_dr']
print len(train_df)
## print DataFrame object's shape to make sure it's right for the training
logger.info("Trainig sample of shape {0} and target of shape {1}".format(train_df.shape, target_df.shape))

## train model
# regressor = AdaBoostRegressor(DecisionTreeRegressor(max_depth=10, min_samples_leaf=500),
#                               n_estimators=100)
# regressor.fit(train_df, target_df)
# #res =regressor.predict(test_df)

